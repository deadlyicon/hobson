#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'thor'
require 'hobson'

Class.new Thor do

  def initialize *args
    super
    ARGV.shift
  end

  desc "config", "puts the current config"
  def config
    puts <<-CONFIG.gsub(/^\s+/,'')
      ROOT:   #{Hobson.root}
      CONFIG: #{Hobson.config_path}
      VERSION: #{Hobson.git_version}
    CONFIG
    puts Hobson.config.to_yaml
  end

  desc "console", "start an interactive ruby console"
  def console
    Hobson.log_to_stdout!
    require 'irb'
    # this is bs
    IRB::Context.send(:define_method, :prompt_mode=){ |*args|
      @prompt_i      = "Hobson > "
      @prompt_s      = "Hobson * "
      @prompt_c      = "Hobson > "
      @prompt_n      = "Hobson ? "
      @return_format = "=> %s\n"
      @auto_indent_mode = IRB.conf[:AUTO_INDENT]
    }
    IRB.start
  end

  desc "test", "tell Hobson to run the tests for the current sha"
  method_option :no_web, :type => :boolean, :banner => "don't start hobson web"
  def test
    test_run = Hobson::Project.current.run_tests!
    puts "starting test run #{test_run.id} for #{test_run.sha}"
    unless self.options.no_web
      Hobson::Server.start!(:launch_path => "/projects/#{test_run.project.name}/test_runs/#{test_run.id}")
    end
  end

  desc "work", "become a test running worker"
  method_option :daemonize, :type => :boolean, :aliases => %w{-d}, :banner => 'deamonize before becoming a resque worker'
  method_option :pidfile,   :type => :string,  :aliases => %w{-p}, :banner => 'path to the pid file'
  def work
    Hobson::Worker.become! :daemonize => options.daemonize?, :pidfile => options.pidfile
  end

  desc "web", "start hobson web server (see vegas options)"
  method_options %w( help -h ) => false, :banner => 'show vegas help for more options'
  def web
    Hobson::Server.start!
  end

  desc "resque-web", "start resque-web"
  method_options %w( help -h ) => false, :banner => 'show vegas help for more options'
  def resque_web
    require 'vegas'
    require 'resque/server'
    Resque::Server.set :protection, :except => :frame_options
    Vegas::Runner.new(Hobson.resque::Server, 'hobson-resque-web')
  end

end.start
