- page_title "Test Run #{test_run.id}"
- auto_refresh!

- if test_run.complete?
  #stamp{:class => test_run.status}= test_run.status

%section.test_run{:class => "status-#{classname(test_run.status)}"}
  %section.actions
    - if test_run.complete?
      - action_button 'Rerun', test_run_path+'/rerun'
    - if !test_run.complete?
      - action_button 'Abort', test_run_path+'/abort'
    - unless test_run.running?
      - action_button 'Delete', test_run_path, :delete

  %dl.details
    %dt Project
    %dd
      %a{:href => project_path(test_run.project)}= test_run.project.name

    %dt SHA
    %dd
      %a{:href => sha_url(test_run.project.origin, test_run.sha)}= test_run.sha

    %dt Requestor
    %dd= test_run.requestor || 'unknown'

    %dt Status
    %dd= test_run.status

    %dt Duration
    %dd= distance_of_time_in_minutes(test_run_duration)

    - if test_run.tests.present?

      %dt Tests Completed
      %dd.tests-completed
        %div
          = test_run.tests.find_all(&:complete?).count
        %div
          - tests_completed

      %dt Tests Waiting
      %dd
        = test_run.tests.find_all(&:needs_run?).count

      %dt Hung Tests
      %dd= test_run.tests.find_all(&:hung?).count

      %dt Test Retries
      %dd= test_run.tests.map{|t| t.tries < 1 ? 1 : t.tries}.sum - test_run.tests.count

  - if test_run.errored? && test_run['exception:class'].present?
    .exception
      %h2 Exception #{test_run['exception:class']}:
      .exception= test_run['exception:message']
      %h2 Backtrace:
      .backtrace= test_run['exception:backtrace']


  - if test_run.jobs.present?
    %section.jobs
      %h2 Jobs
      %ol.status
        - test_run.jobs.each do |job|
          %li.job{:class => "status-#{classname(job.status)}"}
            .timeline-wrapper
              .icon
              %a.index{:href => "ssh://#{job['hostname']}"}= job.index
              %ol.timeline
                - job_timeline(job)
            - if job.errored?
              .error
                %dt Error
                %dd
                  %h2 Exception #{job['exception:class']}:
                  .exception= job['exception:message']
                  %h2 Backtrace:
                  .backtrace= job['exception:backtrace']

  - if test_run.tests.present?
    %section.tests
      %h2 Tests
      - if test_run.running?
        %div
          - tests_completed
      %table
        %thead
          %tr
            %th.job
              %div  Job
            %th.test-name
              %div  Test
            %th.tries
              %div  Tries
            %th.est-runtime
              %div  Est.Runtime
            %th.runtime
              %div  Runtime
            %th.status
              %div  Status
            %th.result
              %div  Result
            %th.logs
              %div  Logs
        %tbody
          - sort_tests(test_run.tests).each do |test|
            - job = test_run.jobs[test.job] if test.job.present?
            - result = test.result || ''
            %tr{:class => [result.downcase, test.status]}
              %td.job
                - if job.present?
                  %a{:href => "ssh://#{job['hostname']}"} Job #{job.index}
              %td.test-name
                %div
                  .truncate #{test.type}: #{test.name.gsub(%r{^spec/},'')}
              %td.tries
                %div= test.tries
              %td.est-runtime
                %div= test.est_runtime.present? ? test.est_runtime.round(2) : 'unknown'
              %td.runtime
                %div= test.runtime.round(2) if test.runtime.present?
              %td.status
                %div= test.status
              %td.result
                %div= test.result
              %td.logs
                %div
                  - if job
                    - (1..test.tries).each do |try|
                      - artifact_name = case test.type
                        - when "scenario" ; "log/feature_run#{try}"
                        - when "spec"     ; "log/spec_run#{try}"
                      - if artifact_url = job.artifacts[artifact_name]
                        %a{:href => artifact_url} run#{try}

  - if test_run.jobs.present?
    %section.artifacts
      %h2 Artifacts
      %ol.jobs
        - test_run.jobs.each do |job|
          %li
            %h3 Job #{job.index}
            %ol.artifacts
              - job.artifacts.each do |name, url|
                %li
                  %a{:href => url}= name


- if test_run.complete?
  :javascript
    $(function(){ Hobson.autoRefresh.stop(); });
